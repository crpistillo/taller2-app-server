openapi: 3.0.1
info:
  title: Chotuve app server
  description: The app server of Chotuve
  version: 1.0.0
servers:
- url: /
tags:
- name: user
  description: Operations with user
- name: video
  description: Operations with user's videos
- name: friendship
  description: Operations over user's friendships
- name: messages
  description: Operations with user's private messages
- name: comments
  description: Operations with user's comments
- name: statistics
  description: Operations related to server statistics
paths:
  /user:
    get:
      tags:
      - user
      summary: Query users
      description: Queries all the user information
      parameters:
      - name: email
        in: query
        description: The user email
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Missing email
          content: {}
        404:
          description: User not found
          content: {}
    put:
      tags:
      - user
      summary: Update users profile
      description: Updates the data of the user
      parameters:
        - name: email
          in: query
          description: The email of the user to update
          required: true
          schema:
            type: string
      requestBody:
        description: The user data to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Invalid or missing fields or the message is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        403:
          description: Not authorized
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - user
      summary: Deletes an user
      description: Deletes an user
      parameters:
        - name: email
          in: query
          description: The email of the user to be deleted
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Invalid or missing fields or the message is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        403:
          description: Not authorized
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - user
      summary: Create user
      description: Creates an user
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: User already created, invalid or missing fields or the message
            is not a json
          content: {}
      x-codegen-request-body-name: body
  /user/login:
    post:
      tags:
      - user
      summary: Login
      description: Logins a user
      requestBody:
        description: Login with a user
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  login_token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        400:
          description: Missing fields or not a JSON
          content: {}
        403:
          description: Invalid credentials
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /user/recover_password:
    post:
      tags:
      - user
      summary: Recover password
      description: Sends an email to the user with the token required to recover the
        password
      requestBody:
        description: Sends an email to the user with the token required to recover
          the password
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        403:
          description: Not authorized
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /user/new_password:
    post:
      tags:
      - user
      summary: Set new password
      description: Sets a new password using a recovery token
      requestBody:
        description: Sets a new password using a recovery token
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
                new_password:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields, body is not a json or recovery token invalid
          content: {}
        403:
          description: Not authorized
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /user/video:
    post:
      tags:
        - video
      summary: Upload a video
      description: Uploads a new video
      requestBody:
        description: Video data
        content:
          video/*:
            schema:
              type: string
              format: binary
          application/form:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
        400:
          description: Missing fields or invalid video format
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - video
      summary: Deletes a video
      description: Deletes a video
      parameters:
        - name: video_title
          in: query
          description: The title of the video to delete
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: Unexistent video
          content: {}
      x-codegen-request-body-name: body
  /user/videos:
    get:
      tags:
        - video
      summary: Get users videos
      description: Get users videos
      parameters:
        - name: email
          in: query
          description: The user name that uploaded the video
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
        400:
          description: Missing email
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        403:
          description: Not authorized
          content: {}
      x-codegen-request-body-name: body
  /user/friend_request:
    post:
      tags:
      - friendship
      summary: Created a friend request
      description: Created a friend request
      requestBody:
        description: Other user data
        content:
          application/json:
            schema:
              type: object
              properties:
                other_user_email:
                  type: string
        required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields, users already friend or request is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: Other user not found
          content: {}
      x-codegen-request-body-name: body
  /user/friend_request/accept:
    post:
      tags:
      - friendship
      summary: Accepts a friend request
      description: Accepts a friend request
      requestBody:
        description: Other user data
        content:
          application/json:
            schema:
              type: object
              properties:
                other_user_email:
                  type: string
        required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields or request is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: Unexistent friend request
          content: {}
      x-codegen-request-body-name: body
  /user/friend_request/reject:
    post:
      tags:
      - friendship
      summary: Rejects a friend request
      description: Rejects a friend request
      requestBody:
        description: Other user data
        content:
          application/json:
            schema:
              type: object
              properties:
                other_user_email:
                  type: string
        required: true
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields or request is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: Unexistent friend request
          content: {}
      x-codegen-request-body-name: body
  /user/friend_requests:
    get:
      tags:
        - friendship
      summary: List users that have a friend request pending for you
      description: List users that have a friend request pending for you
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/User'
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
  /user/friend:
    delete:
      tags:
        - friendship
      summary: Deletes a friend
      description: Deletes a friend
      parameters:
        - name: other_user_email
          in: query
          description: The user's email to delete friendship
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing parameters
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
  /user/friends:
    get:
      tags:
        - friendship
      summary: List users that have a friend request pending for you
      description: List users that have a friend request pending for you
      parameters:
        - name: email
          in: query
          description: The user's friends to get
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/User'
        400:
          description: Missing email
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        403:
          description: Not authorized
          content: {}
      x-codegen-request-body-name: body
  /videos/top:
    get:
      tags:
        - video
      summary: Get top videos
      description: Get top videos
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  video:
                    $ref: '#/components/schemas/Video'
      x-codegen-request-body-name: body
  /videos/search:
    get:
      tags:
        - video
      summary: Get videos by search query
      description: Get videos by search query
      parameters:
        - name: query
          in: query
          description: The query searched
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  video:
                    $ref: '#/components/schemas/Video'
      x-codegen-request-body-name: body
  /videos/reaction:
    get:
      tags:
        - video
      summary: Get my reaction to a video
      description: Get my reaction to a video
      parameters:
        - name: target_email
          in: query
          description: The email of the owner of the video
          required: true
          schema:
            type: string
        - name: video_title
          in: query
          description: The title of the video
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  reaction:
                    type: string
        400:
          description: Missing fields
          content: {}
    post:
      tags:
        - video
      summary: Reacts to a video
      description: Creates a new reaction to a video or updates a previous one
      security:
        - bearerAuth: []
      requestBody:
        description: Reaction parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                target_email:
                  type: string
                video_title:
                  type: string
                reaction:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields, body is not a json or unexistent reaction
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - video
      summary: Deletes a reaction if exists
      description: Deletes a reaction to a video
      parameters:
        - name: target_email
          in: query
          description: The email of the owner of the video
          required: true
          schema:
            type: string
        - name: video_title
          in: query
          description: The title of the video
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields or body is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
  /user/friendship_status_with:
    get:
      tags:
        - friendship
      summary: Get friendship status
      description: Gets a friendship status
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: query
          description: The user's friends to get
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: Missing fields
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
  /user/message:
    post:
      tags:
        - messages
      summary: Send a message
      description: Send a message
      security:
        - bearerAuth: []
      requestBody:
        description: Message parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                other_user_email:
                  type: string
                message:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields or body is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        403:
          description: Unauthorized, you are not friends with this user
          content: {}
      x-codegen-request-body-name: body
  /user/messages_with:
    get:
      tags:
        - messages
      summary: Get messages with a user
      description: Get messages with a user
      security:
        - bearerAuth: []
      parameters:
        - name: other_user_email
          in: query
          description: The user's to get the messages
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page for the messages
          required: true
          schema:
            type: string
        - name: per_page
          in: query
          description: The messages per page
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    pages:
                      type: integer
                    messages:
                      type: object
                      properties:
                        from_user:
                          type: string
                        to_user:
                          type: string
                        message:
                          type: string
                        timestamp:
                          type: string
        400:
          description: Missing fields
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: No more messages
          content: {}
      x-codegen-request-body-name: body
  /user/last_conversations:
    get:
      tags:
        - messages
      summary: Get last conversations
      description: Get user data and last message for each active conversation ordered from recent to oldest
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_data:
                      $ref: '#/components/schemas/User'
                    last_message:
                      type: object
                      properties:
                        from_user:
                          type: string
                        to_user:
                          type: string
                        message:
                          type: string
                        timestamp:
                          type: string
        400:
          description: Missing fields
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
        404:
          description: No more messages
          content: {}
      x-codegen-request-body-name: body
  /videos/comment:
    post:
      tags:
        - comments
      summary: Comment a video
      description: Comment a video
      security:
        - bearerAuth: []
      requestBody:
        description: Comment parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                target_email:
                  type: string
                video_title:
                  type: string
                comment:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields or body is not a json
          content: {}
        401:
          description: Access token is missing or invalid
          content: {}
      x-codegen-request-body-name: body
  /videos/comments:
    get:
      tags:
        - comments
      summary: Get comments in a video
      description: Get user data and comments fot a video
      security:
        - bearerAuth: []
      parameters:
        - name: other_user_email
          in: query
          description: The owner of the video
          required: true
          schema:
            type: string
        - name: video_title
          in: query
          description: The title of the video
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/User'
                    comment:
                      type: object
                      properties:
                        content:
                          type: string
                        timestamp:
                          type: string
        400:
          description: Missing fields
          content: {}
      x-codegen-request-body-name: body
  /registered_users:
    get:
      tags:
        - users
      summary: Get a paginated list of registered users
      description: Get a paginated list of registered users
      parameters:
        - name: page
          in: query
          description: The page to get
          required: true
          schema:
            type: integer
        - name: users_per_page
          in: query
          description: The amount of users per page to get
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content: {}
        400:
          description: Missing fields
          content: {}
        403:
          description: Not authorized
          content: {}
        404:
          description: Page does not exist
          content: {}
      x-codegen-request-body-name: body
  /api_call_statistics:
    get:
      tags:
        - statistics
      summary: Get api calls statistics
      description: Get api calls statistics
      responses:
        200:
          description: Successful operation
          content: {}
      x-codegen-request-body-name: body
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        fullname:
          type: string
        password:
          type: string
        phone_number:
          type: string
        photo:
          type: string
        admin:
          type: boolean
      xml:
        name: User
    Video:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        visible:
          type: string
        location:
          type: string
      xml:
        name: Video
